package se.yrgo.test;

import org.hibernate.cfg.Configuration;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import se.yrgo.domain.*;

public class HibernateTest {

    private static SessionFactory sessionFactory = null;

    public static void main(String[] args) {

        // Tutor tutor = new Tutor("ABC123", "Edward", 30000);
        // Student student = new Student("Sara Hedborn");
        // student.allocateTutor(tutor);
        // System.out.println(student.getTutorName());


        SessionFactory sf = getSessionFactory();
        Session session = sf.openSession();
        Transaction tx = session.beginTransaction();

        Tutor tutorFromDatabase = session.get(Tutor.class, 28);
        
        Student newStudent= new Student("Susan Lindberg");
        newStudent.allocateTutor(tutorFromDatabase);
       
        session.save(newStudent);
        // session.save(student);
        // session.save(tutor);

        // Student studentFromDatabase = session.get(Student.class, 27);
        // System.out.println(studentFromDatabase);
        // System.out.println(studentFromDatabase.getTutorName());

        // Tutor tutorFromDatabase = session.get(Tutor.class, 28);
        // System.out.println(tutorFromDatabase);
        // System.out.println(tutorFromDatabase.getName());

        Student student2 = session.get(Student.class, 27);
        student2.allocateTutor(null);

        // Tutor tutorForStudentFromDatabase = studentFromDatabase.getTutor();
        // System.out.println(tutorForStudentFromDatabase.getName());

        /*
         * Student myStudent = (Student) session.get(Student.class, 1);
         * System.out.println("The student has an id of: " + newStudent.getId());
         * 
         * Student myStudent2 = (Student) session.get(Student.class, 2);
         * System.out.println("The student has an id of: " + newStudent2.getId());
         * 
         * Student myStudent3 = (Student) session.get(Student.class, 3);
         * System.out.println("The student has an id of: " + anotherStudent.getId());
         * anotherStudent.setTutor("David Graveyard");
         * 
         * System.out.println(myStudent + " is the student");
         * System.out.println(myStudent2 + " is the student");
         * System.out.println(myStudent3 + " is the student");
         */

        // String hql = "delete from Student where name = :studentName";
        // int rowsDeleted = session.createQuery(hql)
        // .setParameter("studentName", "James")
        // .executeUpdate();

        // String hql = "delete from Student where id = :id";
        // int rowsDeleted = session.createQuery(hql)
        // .setParameter("id", 7)
        // .executeUpdate();

        // System.out.println("Number of students deleted: " + rowsDeleted);

        tx.commit();
        session.close();
    }

    private static SessionFactory getSessionFactory() {
        if (sessionFactory == null) {
            Configuration configuration = new Configuration();
            configuration.configure();

            sessionFactory = configuration.buildSessionFactory();
        }
        return sessionFactory;
    }
}




// student class

package se.yrgo.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;

@Entity
// @Table(name = "TBL_STUDENT")
public class Student {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO) // This line is optional
    private int id;

    @Column(name = "NUM_COURSES")
    private Integer numberOfCourses;

    // @ManyToOne
    // @JoinColumn(name = "TUTOR_FK")
    // privat;

    private String enrollmentID;
    private String name;

    public Student() {
    }

    public Student(String name) {
        this.name = name;
    }


    public String toString() {
        return "name:" + name;
    }

    public String getEnrollmentID() {
        return enrollmentID;
    }

    public void setEnrollmentID(String enrollmentID) {
        this.enrollmentID = enrollmentID;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public Integer getNumberOfCourses() {
        return numberOfCourses;
    }

    public void setNumberOfCourses(Integer numberOfCourses) {
        this.numberOfCourses = numberOfCourses;
    }
}



package se.yrgo.domain;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.MapKey;
import jakarta.persistence.OneToMany;

@Entity
public class Tutor {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO) // This line is optional
    private int id;

    @OneToMany
    @JoinColumn(name = "TUTOR_FK")
    
    private Map<String, Student> teachingGroup;
    @MapKey(name = "enrollmentID")

    private String tutorId;
    private String name;
    private int salary;

    public Tutor() {
    }

    public Tutor(String tutorId, String name, int salary) {
        this.tutorId = tutorId;
        this.name = name;
        this.salary = salary;
        this.teachingGroup = new HashMap<String, Student>();
    }

    public void addStudentToTeachingGroup(Student newStudent) {
        this.teachingGroup.put(newStudent.getEnrollmentID(), newStudent);
    }

    public Map<String, Student> getTeachingGroup() {
        Map<String, Student> unmodifiable = Collections.unmodifiableMap(this.teachingGroup);
        return unmodifiable;
    }

    public String getTutorId() {
        return tutorId;
    }

    public String getName() {
        return name;
    }

    public int getSalary() {
        return salary;
    }

    @Override
    public String toString() {
        return "Tutor [tutorId=" + tutorId + ", name=" + name + ", salary=" + salary + "]";
    }

}